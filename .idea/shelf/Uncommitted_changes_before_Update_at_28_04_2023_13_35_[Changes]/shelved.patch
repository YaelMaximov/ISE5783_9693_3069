Index: src/renderer/Camera.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package renderer;\r\n\r\nimport primitives.Point;\r\nimport primitives.Ray;\r\nimport primitives.Vector;\r\n\r\nimport static primitives.Util.isZero;\r\n\r\npublic class Camera {\r\n    private Point p0;\r\n\r\n    private Vector vUp;\r\n    private Vector vTo;\r\n    private Vector vRight;\r\n\r\n    private double distance;\r\n    private double width;\r\n    private double height;\r\n\r\n    public Camera(Point p0, Vector vUp, Vector vTo) throws IllegalAccessException {\r\n        if(!isZero(vTo.dotProduct(vUp)))\r\n        {\r\n            throw new IllegalArgumentException(\"vTo and vUp are not orthogonal\");\r\n        }\r\n        this.p0 = p0;\r\n\r\n        this.vUp = vUp.normalize();\r\n        this.vTo = vTo.normalize();\r\n\r\n        vRight=this.vTo.crossProduct((this.vUp));\r\n    }\r\n    public Camera setVPSize(double width, double height){\r\n        this.width=width;\r\n        this.height=height;\r\n        return this;\r\n    }\r\n    public Camera setVPDistance(double distance){\r\n        this.distance=distance;\r\n        return this;\r\n    }\r\n    public Ray constructRay(int nX, int nY, int j, int i) throws IllegalAccessException {\r\n        //view plane center point\r\n        Point Pc=p0.add(vTo.scale(distance));\r\n\r\n        //pixels ratios\r\n        double Rx=width/nX;\r\n        double Ry=height/nY;\r\n\r\n        //Pij point[i,j] in view plane coordinates\r\n        Point Pij=Pc;\r\n\r\n        //delta values for moving on the view-plane\r\n        double Xj=(j-(nX-1)/2d)*Rx;\r\n        double Yi=-(i-(nY-1)/2d)*Ry;\r\n\r\n        if(!isZero(Xj)){\r\n            Pij=Pij.add(vRight.scale(Xj));\r\n        }\r\n        if(!isZero(Yi)){\r\n            Pij=Pij.add(vUp.scale(Yi));\r\n        }\r\n\r\n        //vector from camera's eye in the direction of point(i,j) in the view-plane\r\n        Vector Vij=Pij.subtract(p0);\r\n\r\n        return new Ray(p0,Vij);\r\n    }\r\n\r\n\r\n    public Point getP0() {\r\n        return p0;\r\n    }\r\n\r\n    public Vector getvUp() {\r\n        return vUp;\r\n    }\r\n\r\n    public Vector getvTo() {\r\n        return vTo;\r\n    }\r\n\r\n    public Vector getvRight() {\r\n        return vRight;\r\n    }\r\n\r\n    public double getDistance() {\r\n        return distance;\r\n    }\r\n\r\n    public double getWidth() {\r\n        return width;\r\n    }\r\n\r\n    public double getHeight() {\r\n        return height;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/renderer/Camera.java b/src/renderer/Camera.java
--- a/src/renderer/Camera.java	(revision 6c4ded59ffcfeb3c3647609c1ed3eec9e91479b5)
+++ b/src/renderer/Camera.java	(date 1682624934485)
@@ -6,6 +6,9 @@
 
 import static primitives.Util.isZero;
 
+/**
+ * Camera class represents a virtual camera in a 3D scene.
+ */
 public class Camera {
     private Point p0;
 
@@ -17,9 +20,16 @@
     private double width;
     private double height;
 
+    /**
+     * Constructs a camera with the given position and orientation vectors.
+     *
+     * @param p0  The position of the camera.
+     * @param vUp The up vector of the camera.
+     * @param vTo The direction vector the camera is pointing towards.
+     * @throws IllegalAccessException If vUp and vTo are not orthogonal.
+     */
     public Camera(Point p0, Vector vUp, Vector vTo) throws IllegalAccessException {
-        if(!isZero(vTo.dotProduct(vUp)))
-        {
+        if (!isZero(vTo.dotProduct(vUp))) {
             throw new IllegalArgumentException("vTo and vUp are not orthogonal");
         }
         this.p0 = p0;
@@ -27,71 +37,79 @@
         this.vUp = vUp.normalize();
         this.vTo = vTo.normalize();
 
-        vRight=this.vTo.crossProduct((this.vUp));
+        vRight = this.vTo.crossProduct((this.vUp));
     }
-    public Camera setVPSize(double width, double height){
-        this.width=width;
-        this.height=height;
+
+    /**
+     * Sets the size of the view plane.
+     *
+     * @param width  The width of the view plane.
+     * @param height The height of the view plane.
+     * @return The camera object itself, for method chaining.
+     */
+    public Camera setVPSize(double width, double height) {
+        this.width = width;
+        this.height = height;
         return this;
     }
-    public Camera setVPDistance(double distance){
-        this.distance=distance;
+
+    /**
+     * Sets the distance of the view plane from the camera.
+     *
+     * @param distance The distance of the view plane from the camera.
+     * @return The camera object itself, for method chaining.
+     */
+    public Camera setVPDistance(double distance) {
+        this.distance = distance;
         return this;
     }
+
+    /**
+     * Constructs a ray from the camera passing through a specified pixel on the view plane.
+     *
+     * @param nX The number of pixels in the x-axis of the view plane.
+     * @param nY The number of pixels in the y-axis of the view plane.
+     * @param j  The x-coordinate of the pixel.
+     * @param i  The y-coordinate of the pixel.
+     * @return A ray passing through the specified pixel.
+     * @throws IllegalAccessException If vUp and vTo are not orthogonal.
+     */
     public Ray constructRay(int nX, int nY, int j, int i) throws IllegalAccessException {
         //view plane center point
-        Point Pc=p0.add(vTo.scale(distance));
+        Point Pc = p0.add(vTo.scale(distance));
 
         //pixels ratios
-        double Rx=width/nX;
-        double Ry=height/nY;
+        double Rx = width / nX;
+        double Ry = height / nY;
 
         //Pij point[i,j] in view plane coordinates
-        Point Pij=Pc;
+        Point Pij = Pc;
 
         //delta values for moving on the view-plane
-        double Xj=(j-(nX-1)/2d)*Rx;
-        double Yi=-(i-(nY-1)/2d)*Ry;
+        double Xj = (j - (nX - 1) / 2d) * Rx;
+        double Yi = -(i - (nY - 1) / 2d) * Ry;
 
-        if(!isZero(Xj)){
-            Pij=Pij.add(vRight.scale(Xj));
+        if (!isZero(Xj)) {
+            Pij = Pij.add(vRight.scale(Xj));
         }
-        if(!isZero(Yi)){
-            Pij=Pij.add(vUp.scale(Yi));
+        if (!isZero(Yi)) {
+            Pij = Pij.add(vUp.scale(Yi));
         }
 
         //vector from camera's eye in the direction of point(i,j) in the view-plane
-        Vector Vij=Pij.subtract(p0);
+        Vector Vij = Pij.subtract(p0);
 
-        return new Ray(p0,Vij);
+        return new Ray(p0, Vij);
     }
 
-
+    /**
+     * Returns the position of the camera.
+     *
+     * @return The position of the camera.
+     */
     public Point getP0() {
         return p0;
     }
-
-    public Vector getvUp() {
-        return vUp;
-    }
-
-    public Vector getvTo() {
-        return vTo;
-    }
-
-    public Vector getvRight() {
-        return vRight;
-    }
+}
 
-    public double getDistance() {
-        return distance;
-    }
 
-    public double getWidth() {
-        return width;
-    }
-
-    public double getHeight() {
-        return height;
-    }
-}
Index: unittests/IntegrationTests.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import geometries.Geometry;\r\nimport geometries.Sphere;\r\nimport org.junit.jupiter.api.Test;\r\nimport primitives.Point;\r\nimport primitives.Ray;\r\nimport primitives.Vector;\r\nimport renderer.Camera;\r\n\r\nimport java.lang.reflect.Array;\r\nimport java.util.LinkedList;\r\nimport java.util.List;\r\n\r\nimport static org.junit.jupiter.api.Assertions.assertEquals;\r\nimport static org.junit.jupiter.api.Assertions.assertNull;\r\n\r\npublic class IntegrationTests {\r\n\r\n    int findNumberOfIntersecions(Camera camera,Geometry geometry) throws IllegalAccessException {\r\n        int points=0;\r\n        for (int i = 0; i <= 2; i++){\r\n            for (int j = 0; j <= 2; j++){\r\n                Ray ray=camera.constructRay(3,3,j,i);\r\n                if(geometry.findIntsersections(ray)!=null){\r\n                    points+=geometry.findIntsersections(ray).size();\r\n                }\r\n            }\r\n        }\r\n        return points;\r\n\r\n    }\r\n    @Test\r\n    void CameraSphereIntersections() throws IllegalAccessException {\r\n        Camera camera=new Camera(new Point(0,0,0),new Vector(0,-1,0),new Vector(0,0,-1));\r\n        camera.setVPSize(3,3);\r\n        camera.setVPDistance(1);\r\n\r\n        // TC01: small sphere in front of view plane(2 points)\r\n        Sphere sphere=new Sphere(1,new Point(0,0,-3));\r\n        assertEquals(2,findNumberOfIntersecions(camera,sphere),\"wrong number of intersection points \");\r\n\r\n        camera=new Camera(new Point(0,0,0.5),new Vector(0,-1,0),new Vector(0,0,-1));\r\n        camera.setVPSize(3,3);\r\n        camera.setVPDistance(1);\r\n\r\n        // TC02: big sphere in front of view plane(18 points)\r\n        sphere=new Sphere(2.5,new Point(0,0,-2.5));\r\n        assertEquals(18,findNumberOfIntersecions(camera,sphere),\"wrong number of intersection points \");\r\n\r\n        // TC03: the corners rays of the view plane doesn't cross the sphere  (10 points)\r\n        sphere=new Sphere(2,new Point(0,0,-2));\r\n        assertEquals(10,findNumberOfIntersecions(camera,sphere),\"wrong number of intersection points \");\r\n\r\n        // TC04: sphere behind the view plane (0 points)\r\n        sphere=new Sphere(0.5,new Point(0,0,1));\r\n        assertEquals(0,findNumberOfIntersecions(camera,sphere),\"wrong number of intersection points \");\r\n\r\n\r\n\r\n    }\r\n    @Test\r\n    void CameraPlaneIntersections() {\r\n    }\r\n    @Test\r\n    void CameraTriangleIntersections() {\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/unittests/IntegrationTests.java b/unittests/IntegrationTests.java
--- a/unittests/IntegrationTests.java	(revision 6c4ded59ffcfeb3c3647609c1ed3eec9e91479b5)
+++ b/unittests/IntegrationTests.java	(date 1682625387682)
@@ -6,28 +6,39 @@
 import primitives.Vector;
 import renderer.Camera;
 
-import java.lang.reflect.Array;
-import java.util.LinkedList;
-import java.util.List;
-
 import static org.junit.jupiter.api.Assertions.assertEquals;
-import static org.junit.jupiter.api.Assertions.assertNull;
 
+/**
+ * Integration tests for the camera with different geometries
+ */
 public class IntegrationTests {
 
-    int findNumberOfIntersecions(Camera camera,Geometry geometry) throws IllegalAccessException {
+    /**
+     * Find the number of intersection points between a geometry and a camera's view plane
+     * @param camera The camera to use
+     * @param geometry The geometry to check
+     * @param nX Number of pixels in the x axis
+     * @param nY Number of pixels in the y axis
+     * @return The total number of intersection points found
+     * @throws IllegalAccessException If the camera constructs an illegal ray
+     */
+    int findNumberOfIntersecions(Camera camera, Geometry geometry, int nX, int nY) throws IllegalAccessException {
         int points=0;
-        for (int i = 0; i <= 2; i++){
-            for (int j = 0; j <= 2; j++){
-                Ray ray=camera.constructRay(3,3,j,i);
+        for (int i = 0; i <= nY; i++){
+            for (int j = 0; j <= nX; j++){
+                Ray ray=camera.constructRay(nX,nY,j,i);
                 if(geometry.findIntsersections(ray)!=null){
                     points+=geometry.findIntsersections(ray).size();
                 }
             }
         }
         return points;
-
     }
+
+    /**
+     * Test camera-sphere intersection with different scenarios
+     * @throws IllegalAccessException If the camera constructs an illegal ray
+     */
     @Test
     void CameraSphereIntersections() throws IllegalAccessException {
         Camera camera=new Camera(new Point(0,0,0),new Vector(0,-1,0),new Vector(0,0,-1));
@@ -36,7 +47,7 @@
 
         // TC01: small sphere in front of view plane(2 points)
         Sphere sphere=new Sphere(1,new Point(0,0,-3));
-        assertEquals(2,findNumberOfIntersecions(camera,sphere),"wrong number of intersection points ");
+        assertEquals(2,findNumberOfIntersecions(camera,sphere,3 ,3 ),"wrong number of intersection points ");
 
         camera=new Camera(new Point(0,0,0.5),new Vector(0,-1,0),new Vector(0,0,-1));
         camera.setVPSize(3,3);
@@ -44,22 +55,27 @@
 
         // TC02: big sphere in front of view plane(18 points)
         sphere=new Sphere(2.5,new Point(0,0,-2.5));
-        assertEquals(18,findNumberOfIntersecions(camera,sphere),"wrong number of intersection points ");
+        assertEquals(18,findNumberOfIntersecions(camera,sphere, 3, 3),"wrong number of intersection points ");
 
         // TC03: the corners rays of the view plane doesn't cross the sphere  (10 points)
         sphere=new Sphere(2,new Point(0,0,-2));
-        assertEquals(10,findNumberOfIntersecions(camera,sphere),"wrong number of intersection points ");
+        assertEquals(10,findNumberOfIntersecions(camera,sphere,3 , 3),"wrong number of intersection points ");
 
         // TC04: sphere behind the view plane (0 points)
         sphere=new Sphere(0.5,new Point(0,0,1));
-        assertEquals(0,findNumberOfIntersecions(camera,sphere),"wrong number of intersection points ");
-
-
-
+        assertEquals(0,findNumberOfIntersecions(camera,sphere,3 ,3 ),"wrong number of intersection points ");
     }
+
+    /**
+     * Test camera-plane intersection with different scenarios
+     */
     @Test
     void CameraPlaneIntersections() {
     }
+
+    /**
+     * Test camera-triangle intersection with different scenarios
+     */
     @Test
     void CameraTriangleIntersections() {
     }
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"56e13de4-d6b6-40fc-8784-02a4db7270a4\" name=\"Changes\" comment=\"Ex3\">\r\n      <change afterPath=\"$PROJECT_DIR$/unittests/renderer/CameraTests.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/primitives/Ray.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/primitives/Ray.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/unittests/renderer/CameraTest.java\" beforeDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Interface\" />\r\n        <option value=\"Class\" />\r\n        <option value=\"JUnit5 Test Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2MTAu3KBuierhfHiNK1MCuunvIb\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrary&quot;: &quot;JUnit5&quot;,\r\n    &quot;com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrarySuperClass.JUnit5&quot;: &quot;&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CreateClassDialog.RecentsKey\">\r\n      <recent name=\"geometries\" />\r\n      <recent name=\"primitives\" />\r\n    </key>\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\משפחת מקסימוב\\IdeaProjects\\ISE5783_9693_3069\\unitTests\\geometries\" />\r\n      <recent name=\"C:\\Users\\משפחת מקסימוב\\IdeaProjects\\ISE5783_9693_3069\\src\\test\" />\r\n      <recent name=\"C:\\Users\\משפחת מקסימוב\\IdeaProjects\\ISE5783_9693_3069\\src\\primitives\" />\r\n      <recent name=\"C:\\Users\\משפחת מקסימוב\\IdeaProjects\\ISE5783_9693_3069\\src\\geometries\" />\r\n    </key>\r\n    <key name=\"CreateTestDialog.Recents.Supers\">\r\n      <recent name=\"\" />\r\n    </key>\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\משפחת מקסימוב\\IdeaProjects\\ISE5783_9693_3069\\unittests\\renderer\" />\r\n      <recent name=\"C:\\Users\\משפחת מקסימוב\\IdeaProjects\\ISE5783_9693_3069\\unittests\\geometries\" />\r\n    </key>\r\n    <key name=\"CreateTestDialog.RecentsKey\">\r\n      <recent name=\"renderer\" />\r\n      <recent name=\"geometries\" />\r\n      <recent name=\"primitives\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\" selected=\"JUnit.CameraTests.testConstructRay\">\r\n    <configuration name=\"CameraTest\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"ISE5783_9693_3069\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"renderer.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"renderer\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"renderer.CameraTest\" />\r\n      <option name=\"TEST_OBJECT\" value=\"class\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"CameraTest.testConstructRay\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"ISE5783_9693_3069\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"renderer.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"renderer\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"renderer.CameraTest\" />\r\n      <option name=\"METHOD_NAME\" value=\"testConstructRay\" />\r\n      <option name=\"TEST_OBJECT\" value=\"method\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"CameraTests.testConstructRay\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"ISE5783_9693_3069\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"renderer.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"renderer\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"renderer.CameraTests\" />\r\n      <option name=\"METHOD_NAME\" value=\"testConstructRay\" />\r\n      <option name=\"TEST_OBJECT\" value=\"method\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"IntegrationTests.CameraSphereIntersections\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"ISE5783_9693_3069\" />\r\n      <option name=\"PACKAGE_NAME\" value=\"\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"IntegrationTests\" />\r\n      <option name=\"METHOD_NAME\" value=\"CameraSphereIntersections\" />\r\n      <option name=\"TEST_OBJECT\" value=\"method\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"SphereTests.testGetNormal\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"ISE5783_9693_3069\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"geometries.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"geometries\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"geometries.SphereTests\" />\r\n      <option name=\"METHOD_NAME\" value=\"testGetNormal\" />\r\n      <option name=\"TEST_OBJECT\" value=\"method\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"JUnit.CameraTests.testConstructRay\" />\r\n        <item itemvalue=\"JUnit.CameraTest\" />\r\n        <item itemvalue=\"JUnit.CameraTest.testConstructRay\" />\r\n        <item itemvalue=\"JUnit.IntegrationTests.CameraSphereIntersections\" />\r\n        <item itemvalue=\"JUnit.SphereTests.testGetNormal\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"56e13de4-d6b6-40fc-8784-02a4db7270a4\" name=\"Changes\" comment=\"\" />\r\n      <created>1677781421735</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1677781421735</updated>\r\n    </task>\r\n    <task id=\"LOCAL\u200E-00001\" summary=\"EX-0-first\">\r\n      <created>1679397112988</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL\u200E-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\u200E\" />\r\n      <updated>1679397112988</updated>\r\n    </task>\r\n    <task id=\"LOCAL\u200E00002\" summary=\"EX-2-first\">\r\n      <created>1679428034627</created>\r\n      <option name=\"number\" value=\"LOCAL\u200E00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL\u200E00002\" />\r\n      <updated>1679428034628</updated>\r\n    </task>\r\n    <task id=\"LOCAL\u200E-00003\" summary=\"EX-1-with javadoc\">\r\n      <created>1681415518169</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL\u200E-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\u200E\" />\r\n      <updated>1681415518169</updated>\r\n    </task>\r\n    <task id=\"LOCAL\u200E-00004\" summary=\"EX-1-with javadoc\">\r\n      <created>1681467201958</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL\u200E-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\u200E\" />\r\n      <updated>1681467201958</updated>\r\n    </task>\r\n    <task id=\"LOCAL\u200E-00005\" summary=\"Ex2\">\r\n      <created>1681588212150</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL\u200E-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\u200E\" />\r\n      <updated>1681588212150</updated>\r\n    </task>\r\n    <task id=\"LOCAL\u200E-00006\" summary=\"Ex3\">\r\n      <created>1682194445651</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL\u200E-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\u200E\" />\r\n      <updated>1682194445651</updated>\r\n    </task>\r\n    <task id=\"LOCAL\u200E-00007\" summary=\"Ex3\">\r\n      <created>1682602415731</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL\u200E-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\u200E\" />\r\n      <updated>1682602415731</updated>\r\n    </task>\r\n    <task id=\"LOCAL\u200E-00008\" summary=\"Ex3\">\r\n      <created>1682616063602</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL\u200E-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\u200E\" />\r\n      <updated>1682616063602</updated>\r\n    </task>\r\n    <task id=\"LOCAL\u200E-00009\" summary=\"Ex3\">\r\n      <created>1682616517304</created>\r\n      <option name=\"number\" value=\"00009\" />\r\n      <option name=\"presentableId\" value=\"LOCAL\u200E-00009\" />\r\n      <option name=\"project\" value=\"LOCAL\u200E\" />\r\n      <updated>1682616517304</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"10\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"EX-0-first\" />\r\n    <MESSAGE value=\"EX-2-first\" />\r\n    <MESSAGE value=\"EX-1-with javadoc\" />\r\n    <MESSAGE value=\"tests for vector and point\" />\r\n    <MESSAGE value=\"Ex2\" />\r\n    <MESSAGE value=\"Ex3\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Ex3\" />\r\n  </component>\r\n  <component name=\"XDebuggerManager\">\r\n    <breakpoint-manager>\r\n      <breakpoints>\r\n        <line-breakpoint enabled=\"true\" type=\"java-method\">\r\n          <url>file://$PROJECT_DIR$/unittests/geometries/PlaneTests.java</url>\r\n          <line>20</line>\r\n          <properties class=\"geometries.PlaneTests\" method=\"testConstructor\">\r\n            <option name=\"EMULATED\" value=\"true\" />\r\n            <option name=\"WATCH_EXIT\" value=\"false\" />\r\n          </properties>\r\n          <option name=\"timeStamp\" value=\"16\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/geometries/Tube.java</url>\r\n          <line>49</line>\r\n          <option name=\"timeStamp\" value=\"25\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/unittests/geometries/TriangleTests.java</url>\r\n          <line>44</line>\r\n          <option name=\"timeStamp\" value=\"42\" />\r\n        </line-breakpoint>\r\n      </breakpoints>\r\n    </breakpoint-manager>\r\n    <watches-manager>\r\n      <configuration name=\"JUnit\">\r\n        <watch expression=\"new Ray(ZERO_POINT, new Vector(1, -1, -10)\" />\r\n        <watch expression=\"camera.setVPSize(8, 8).constructRay(4, 4, 1, 1)\" />\r\n      </configuration>\r\n      <configuration name=\"Application\">\r\n        <watch expression=\"v1.add(v2)\" />\r\n        <watch expression=\"!v1.add(v2).equals(new Vector(-1, -2, -3))\" />\r\n        <watch expression=\"new Vector(-1, -2, -3)\" />\r\n        <watch expression=\"v1.add(v2).equals(new Vector(-1, -2, -3))\" language=\"JAVA\" />\r\n        <watch expression=\"v1.subtract(v2)\" />\r\n        <watch expression=\"new Vector(3, 6, 9)\" />\r\n      </configuration>\r\n    </watches-manager>\r\n  </component>\r\n  <component name=\"com.intellij.coverage.CoverageDataManagerImpl\">\r\n    <SUITE FILE_PATH=\"coverage/ISE5783_9693_3069$IntegrationTests_CameraSphereIntersections.ic\" NAME=\"IntegrationTests.CameraSphereIntersections Coverage Results\" MODIFIED=\"1682615393927\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\" />\r\n    <SUITE FILE_PATH=\"coverage/ISE5783_9693_3069$Main.ic\" NAME=\"Main Coverage Results\" MODIFIED=\"1679342282667\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\">\r\n      <FILTER>test.*</FILTER>\r\n    </SUITE>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 6c4ded59ffcfeb3c3647609c1ed3eec9e91479b5)
+++ b/.idea/workspace.xml	(date 1682625387697)
@@ -4,11 +4,10 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="56e13de4-d6b6-40fc-8784-02a4db7270a4" name="Changes" comment="Ex3">
-      <change afterPath="$PROJECT_DIR$/unittests/renderer/CameraTests.java" afterDir="false" />
+    <list default="true" id="56e13de4-d6b6-40fc-8784-02a4db7270a4" name="Changes" comment="Ex4">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/primitives/Ray.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/primitives/Ray.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/unittests/renderer/CameraTest.java" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/renderer/Camera.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/renderer/Camera.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/unittests/IntegrationTests.java" beforeDir="false" afterPath="$PROJECT_DIR$/unittests/IntegrationTests.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -66,7 +65,7 @@
       <recent name="primitives" />
     </key>
   </component>
-  <component name="RunManager" selected="JUnit.CameraTests.testConstructRay">
+  <component name="RunManager" selected="JUnit.IntegrationTests.CameraSphereIntersections">
     <configuration name="CameraTest" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
       <module name="ISE5783_9693_3069" />
       <extension name="coverage">
@@ -114,27 +113,20 @@
         <option name="Make" enabled="true" />
       </method>
     </configuration>
-    <configuration name="IntegrationTests.CameraSphereIntersections" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
+    <configuration name="IntegrationTests" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
       <module name="ISE5783_9693_3069" />
       <option name="PACKAGE_NAME" value="" />
       <option name="MAIN_CLASS_NAME" value="IntegrationTests" />
-      <option name="METHOD_NAME" value="CameraSphereIntersections" />
-      <option name="TEST_OBJECT" value="method" />
+      <option name="TEST_OBJECT" value="class" />
       <method v="2">
         <option name="Make" enabled="true" />
       </method>
     </configuration>
-    <configuration name="SphereTests.testGetNormal" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
+    <configuration name="IntegrationTests.CameraSphereIntersections" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
       <module name="ISE5783_9693_3069" />
-      <extension name="coverage">
-        <pattern>
-          <option name="PATTERN" value="geometries.*" />
-          <option name="ENABLED" value="true" />
-        </pattern>
-      </extension>
-      <option name="PACKAGE_NAME" value="geometries" />
-      <option name="MAIN_CLASS_NAME" value="geometries.SphereTests" />
-      <option name="METHOD_NAME" value="testGetNormal" />
+      <option name="PACKAGE_NAME" value="" />
+      <option name="MAIN_CLASS_NAME" value="IntegrationTests" />
+      <option name="METHOD_NAME" value="CameraSphereIntersections" />
       <option name="TEST_OBJECT" value="method" />
       <method v="2">
         <option name="Make" enabled="true" />
@@ -142,11 +134,11 @@
     </configuration>
     <recent_temporary>
       <list>
+        <item itemvalue="JUnit.IntegrationTests.CameraSphereIntersections" />
+        <item itemvalue="JUnit.IntegrationTests" />
         <item itemvalue="JUnit.CameraTests.testConstructRay" />
         <item itemvalue="JUnit.CameraTest" />
         <item itemvalue="JUnit.CameraTest.testConstructRay" />
-        <item itemvalue="JUnit.IntegrationTests.CameraSphereIntersections" />
-        <item itemvalue="JUnit.SphereTests.testGetNormal" />
       </list>
     </recent_temporary>
   </component>
@@ -221,7 +213,14 @@
       <option name="project" value="LOCAL‎" />
       <updated>1682616517304</updated>
     </task>
-    <option name="localTasksCounter" value="10" />
+    <task id="LOCAL‎-00010" summary="Ex4">
+      <created>1682622655488</created>
+      <option name="number" value="00010" />
+      <option name="presentableId" value="LOCAL‎-00010" />
+      <option name="project" value="LOCAL‎" />
+      <updated>1682622655488</updated>
+    </task>
+    <option name="localTasksCounter" value="11" />
     <servers />
   </component>
   <component name="Vcs.Log.Tabs.Properties">
@@ -242,7 +241,8 @@
     <MESSAGE value="tests for vector and point" />
     <MESSAGE value="Ex2" />
     <MESSAGE value="Ex3" />
-    <option name="LAST_COMMIT_MESSAGE" value="Ex3" />
+    <MESSAGE value="Ex4" />
+    <option name="LAST_COMMIT_MESSAGE" value="Ex4" />
   </component>
   <component name="XDebuggerManager">
     <breakpoint-manager>
